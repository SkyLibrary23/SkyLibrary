<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.skylibrary.mappers.bookMapper">
<sql id="basicSelectAll">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			bookPublicationDate, 
			bookRent, 
			bookCoverImg
			
	FROM 	book
</sql>
<!-- 메인 -->
<select id="listMain" resultType="bookVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookCoverImg
			
	FROM     book
	ORDER BY bookPublicationDate DESC 
	LIMIT    0,7
</select>

<!-- 통합검색 -->
<select id="total" resultType="bookVO" parameterType="searchVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			bookPublicationDate, 
			bookRent, 
			bookCoverImg
	FROM 	book
	WHERE 1=1
	<if test="searchText neq null">
		<if test="searchType eq 'all'">
			AND bookSubject  like CONCAT('%',#{searchText},'%')
			OR  bookCompany   like CONCAT('%',#{searchText},'%')
			OR  bookWriter like CONCAT('%',#{searchText},'%')
			OR  bookISBN like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookSubject'">
			AND bookSubject like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookCompany'">
			AND bookCompany like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookWriter'">
			AND bookWriter like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookISBN'">
			AND bookISBN like CONCAT('%',#{searchText},'%')
		</if>
	</if>
	ORDER BY bookSubject
	LIMIT #{start},#{end}
</select>
<select id="mBookList" resultType="bookVO" parameterType="searchVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			DATE_FORMAT(bookPublicationDate, '%Y-%m-%d') as bookPublicationDate,
			bookRent, 
			bookCoverImg
	FROM 	book
	WHERE 1=1
	<if test="searchText != null and searchText != ''">
		<if test="searchType == 'all'">
			AND bookSubject  like CONCAT('%',#{searchText},'%')
			OR  bookCompany   like CONCAT('%',#{searchText},'%')
			OR  bookWriter like CONCAT('%',#{searchText},'%')
			OR  bookISBN like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType == 'bookSubject'">
			AND bookSubject like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType == 'bookISBN'">
			AND bookISBN like CONCAT('%',#{searchText},'%')
		</if>
	</if>
</select>

<select id="countList" parameterType="searchVO" resultType="int">
	SELECT COUNT(*)
	FROM book
	WHERE 1=1
	<if test="searchText neq null">
		<if test="searchType eq 'all'">
			AND bookSubject  like CONCAT('%',#{searchText},'%')
			OR  bookCompany   like CONCAT('%',#{searchText},'%')
			OR  bookWriter like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookSubject'">
			AND bookSubject like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookCompany'">
			AND bookCompany like CONCAT('%',#{searchText},'%')
		</if>
		<if test="searchType eq 'bookWriter'">
			AND bookWriter like CONCAT('%',#{searchText},'%')
		</if>
	</if>
</select>
<insert id="bookAddOk" parameterType="bookVO">
	insert into book
	(
		bookISBN,
		bookSubject, 
		bookStory, 
		bookCompany, 
		bookWriter, 
		bookPublicationDate, 
		bookCoverImg
	)value
	(
		#{bookISBN},
		#{bookSubject}, 
		#{bookStory}, 
		#{bookCompany}, 
		#{bookWriter}, 
		#{bookPublicationDate}, 
		#{bookCoverImg}
	)
</insert>
<!-- 인기도서 -->
<select id="best" resultType="bookVO" parameterType="pagingVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			bookPublicationDate, 
			bookRent, 
			bookCoverImg
	FROM 	book
	ORDER BY bookCount DESC
	LIMIT #{start},#{end}
</select>

<!-- 도서상세페이지 -->
<select id="bookView" parameterType="String" resultType="bookVO">
	SELECT 
		bookSubject, bookStory, bookPublicationDate, bookCoverImg, bookCompany, bookWriter, bookISBN, bookCount, bookRent,
	(select rentEndDate from rent where bookISBN = book.bookISBN and bookRent = 1 order by rentEndDate desc limit 0,1) as rentEndDate,
	(select userID from rent where bookISBN = book.bookISBN and bookRent = 1 order by rentEndDate desc limit 0,1) as userID,
	(select recommendNo from rbook where bookISBN = book.bookISBN limit 0,1) as recommendNo,
	(select recommendWhy from rbook where bookISBN = book.bookISBN limit 0,1) as recommendWhy,
	(select managerID as userID from rbook where bookISBN = book.bookISBN limit 0,1) as managerID
	FROM book
	WHERE bookISBN = #{bookISBN};	
</select>

<!-- 도서상세페이지 cnt -->
<select id="bookCnt" resultType="int">
	SELECT COUNT(*) FROM rent 
	WHERE userID = #{userID}
</select>

<!-- 도서상세페이지 book 테이블 update -->
<update id="updateBook" parameterType="bookVO">
	UPDATE book 
	SET 
		bookCount = bookCount + 1,
		bookRent = 1
	WHERE bookISBN = #{bookISBN}	
</update>

<!-- 도서상세페이지 rent 테이블 insert -->
<insert id="insertRent" parameterType="bookVO">
	INSERT INTO rent 
		(userID, bookISBN, rentStartDate, rentEndDate)
	values 
		(#{userID}, #{bookISBN}, now(), date_add(now(), interval 14 day))
	<selectKey resultType="integer" keyProperty="no" order="AFTER">
		SELECT MAX(rentNo) FROM rent
	</selectKey>	 
</insert>

<!-- rent 테이블 -->
<select id="selectRent" parameterType="int" resultType="bookVO">
	SELECT 
		rentNo, userID, bookISBN, rentStartDate, rentEndDate
	FROM rent
	WHERE rentNo = #{rentNo}
</select>

<!-- 신착도서 -->
<select id="new" resultType="bookVO" parameterType="pagingVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			bookPublicationDate, 
			bookRent, 
			bookCoverImg
	FROM 	book
	ORDER BY bookPublicationDate DESC
	LIMIT #{start},#{end}
</select>


<!-- 사서 추천 도서 -->
<select id="recommend" resultType="bookVO" parameterType="pagingVO">
	SELECT 
			bookISBN,
			bookSubject, 
			bookStory, 
			bookCount, 
			bookCompany, 
			bookWriter, 
			bookPublicationDate, 
			bookRent, 
			bookCoverImg
	FROM 	book 
	WHERE bookISBN IN (SELECT bookISBN from rbook)
	LIMIT #{start},#{end}
</select>

<select id="newCountList" resultType="int">
	SELECT COUNT(*)
	FROM book
	ORDER BY bookPublicationDate DESC
</select>

<select id="bestCountList" resultType="int">
	SELECT COUNT(*)
	FROM book
	ORDER BY bookCount DESC
</select>
<select id="recommendCountList" resultType="int">
	SELECT COUNT(*)
	FROM rbook
</select>
<delete id="bookDeleteOk" parameterType="bookVO">
	DELETE FROM book WHERE bookISBN=#{bookISBN}
</delete>
</mapper>